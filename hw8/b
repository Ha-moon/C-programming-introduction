#include <iostream>
using namespace std;
class Complex {
public:
	Complex(float r = 0.0, float i = 0.0) : re(r), im(i) { }
	Complex operator+(Complex& right) {
		Complex tmp;
		tmp.re = re + right.re; tmp.im = im + right.im;
		return tmp;
	}
	Complex operator-() {
		Complex tmp;
		tmp.re = -re; tmp.im = -im;
		return tmp;
	}
private:
	float re, im;
	friend ostream& operator<<(ostream& cout, const Complex&);
};
ostream& operator<<(ostream& cout, const Complex& Po) {
	if (Po.im < 0) cout << Po.re << " - " << -Po.im << "i" << endl;
	else cout << Po.re << " + " << Po.im << "i"<<endl;
	return cout;
}
int main(void)
{
	Complex com1(1.0, 2.0), com2(3.0, 4.0);
	Complex com3 = com1 + com2; Complex com4 = -com1;
	cout << com1 <<com2 << com3 << com4;
}
