#define PI 3.14

#include <iostream>
using namespace std;

class CCircle {
protected:
	int x, y;
	double Radius;
public:
	CCircle(int a, int b, double r) : x(a), y(b), Radius(r) {
		cout << "CCircle 생성자" << endl;
	}
	~CCircle() {
		cout << "CCircle 소멸자" << endl;
	}
	double GetArea() {
		return (PI * Radius * Radius);
	}
};

class CCylinder : public CCircle {
private:
	int z;
	double Height;
public:
	CCylinder(int a, int b, double r, int c, double h) : CCircle(a, b, r), z(c), Height(h) {
		cout << "CCylinder 생성자" << endl;
	}
	~CCylinder() {
		cout << "CCylinder 소멸자" << endl;
	}
	double GetArea() {
		return (2 * PI * Radius * Radius + 2 * PI * Radius * Height);
	}
	double GetVolume() {
		return (CCircle::GetArea() * Height);
	}
};

int main(void) {
	CCylinder Cy1(1, 1, 1, 1.0, 10.0);
	cout << "밑면적=" << Cy1.CCircle::GetArea() << endl;    // 밑면적
	cout << "표면적=" << Cy1.GetArea() << endl;             // 실린더의 표면적
	cout << "부피=" << Cy1.GetVolume() << endl;             // 실린더의 부피
	return 0;
}
