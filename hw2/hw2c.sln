#include <stdio.h>
#include <stdlib.h>

struct Node // Node definition
{
	int data;
	struct Node *next;
};

struct Node *pStart = NULL; // start Node
struct Node *pEnd = NULL; // end Node

void addfront(int val) // adding to front
{
	struct Node *current = (struct Node *)malloc(sizeof(struct Node));
	current->data = val;
	current->next = pStart;

	pStart = current; // front Node is start
}

void delete(int val) // delete just one Node
{
	struct Node *current = pStart;
	struct Node *remove_node;

	while (1)
	{
		if (current == pEnd) // non exist 
		{
			break;
		}
		else
		{
			if (pStart->data == val) // start is target
			{
				remove_node = pStart;
				pStart = current->next;

				break;
			}
			else // start is not target
			{
				if (current->next == pEnd) // next Node is end
				{
					if (current->data == val)
					{
						remove_node = current;
						pStart = pEnd;
					}

					break;
				}
				else // normal case
				{
					if (current->next->data == val) // delete Node
					{
						remove_node = current->next;
						current->next = current->next->next;

						break;
					}
				}
			}
		}

		current = current->next;
	}

	if (remove_node != NULL)
		free(remove_node);
}

void printlist(struct Node *current)
{
	while (current != NULL)
	{
		printf("%d\n", current->data);
		current = current->next;
	}
}

main(void)
{
	int i;

	for (int i = 1; i <= 5; i++)
		addfront(i);

	delete(2);

	delete(5);

	printlist(pStart);

	return 0;
}
